#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Keypad.h>

// LCD Setup (Assuming 16x2 LCD)
LiquidCrystal_I2C lcd(0x27, 16, 2);

// Keypad Setup
const byte ROW_NUM    = 4; 
const byte COLUMN_NUM = 4; 
char keys[ROW_NUM][COLUMN_NUM] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'0', '+', '-', '#'}
};

byte pin_rows[ROW_NUM] = {9, 8, 7, 6};  // Rows connected to pins 9, 8, 7, 6
byte pin_column[COLUMN_NUM] = {5, 4, 3, 2};  // Columns connected to pins 5, 4, 3, 2

Keypad keypad = Keypad(makeKeymap(keys), pin_rows, pin_column, ROW_NUM, COLUMN_NUM);

// Account Information (max 4 accounts, each with a combination)
struct Account {
  String combination;
  float balance;
};

Account accounts[4] = {
  {"123A", 0},
  {"456B", 0},
  {"789C", 0},
  {"0000", 0}  // Default account
};

// Variables
String enteredCombination = "";
float currentBalance = 0;
bool accountOpen = false;
String enteredSecretCode = "";

void setup() {
  lcd.begin();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Enter Combination");
  delay(1000);
}

void loop() {
  if (!accountOpen) {
    checkCombination();
  } else {
    handleBalanceFunctions();
  }
}

void checkCombination() {
  char key = keypad.getKey();
  
  if (key) {
    // Handle combination input
    if (key == '#') {
      // If '#' is pressed, go back to entry screen
      accountOpen = false;
      enteredCombination = "";
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Enter Combination");
    } else {
      // Append key to the combination
      enteredCombination += key;
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Enter: ");
      lcd.print(enteredCombination);

      // If 4 characters are entered, validate the combination
      if (enteredCombination.length() == 4) {
        bool valid = false;
        for (int i = 0; i < 4; i++) {
          if (accounts[i].combination == enteredCombination) {
            valid = true;
            currentBalance = accounts[i].balance;
            accountOpen = true;
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Account Opened");
            delay(1000);
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Balance: ");
            lcd.print(currentBalance);
            break;
          }
        }
        if (!valid) {
          lcd.clear();
          lcd.setCursor(0, 0);
          lcd.print("Invalid Combination!");
          delay(1000);
          enteredCombination = "";  // Reset entry
          lcd.clear();
          lcd.setCursor(0, 0);
          lcd.print("Enter Combination");
        }
      }
    }
  }
}

void handleBalanceFunctions() {
  char key = keypad.getKey();
  
  if (key) {
    if (key == '+') {
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Enter Amount to Add");
      enteredCombination = "";
      while (true) {
        char key = keypad.getKey();
        if (key) {
          if (key == '#') {
            // Go back to combination entry when # is pressed
            accountOpen = false;
            enteredCombination = "";
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Enter Combination");
            break;
          } else {
            enteredCombination += key;
            lcd.setCursor(0, 1);
            lcd.print("Amount: ");
            lcd.print(enteredCombination);
          }
        }
      }
    } else if (key == '-') {
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Enter Amount to Subtract");
      enteredCombination = "";
      while (true) {
        char key = keypad.getKey();
        if (key) {
          if (key == '#') {
            // Go back to combination entry when # is pressed
            accountOpen = false;
            enteredCombination = "";
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Enter Combination");
            break;
          } else {
            enteredCombination += key;
            lcd.setCursor(0, 1);
            lcd.print("Amount: ");
            lcd.print(enteredCombination);
          }
        }
      }
    } else if (key == 'A') {
      // Check for Secret Code
      enteredSecretCode = "";
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Enter Secret Code");
      while (true) {
        char secretKey = keypad.getKey();
        if (secretKey) {
          enteredSecretCode += secretKey;
          lcd.setCursor(0, 1);
          lcd.print("Code: ");
          lcd.print(enteredSecretCode);

          // Check if the secret code matches
          if (enteredSecretCode == "1A3B") {
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Location: Pulilan");
            lcd.setCursor(0, 1);
            lcd.print("Bulacan, HouseBookshelf");
            delay(2000);
            enteredSecretCode = "";  // Reset the code entry
            break;
          } else if (enteredSecretCode.length() > 4) {
            // Reset if the code is longer than 4 characters
            enteredSecretCode = "";
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Invalid Code");
            delay(1000);
            break;
          }
        }
      }
    }
  }
}
